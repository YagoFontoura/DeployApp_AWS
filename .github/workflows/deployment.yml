name: CI/CD Deploy Kubernetes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read


jobs:

  Build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}


    - uses: actions/checkout@v3
    - name: Build the Database image
      working-directory: database
      run: docker build . --file Dockerfile --tag titanpxp/databasemysql:2.0
      
    - uses: actions/checkout@v3
    - name: Build the backend image
      working-directory: backend
      run: docker build . --file Dockerfile --tag titanpxp/backend:2.0

    - uses: actions/checkout@v3
    - name: Build the frontend image
      working-directory: public
      run: docker build . --file Dockerfile --tag titanpxp/frontend-application:2.0

    - uses: actions/checkout@v3
    - name: Build the Database image
      run: docker image push titanpxp/databasemysql:2.0
    
    - uses: actions/checkout@v3
    - name: Build the Database image
      run: docker image push titanpxp/backend:2.0

    - uses: actions/checkout@v3
    - name: Build the Database image
      run: docker image push titanpxp/frontend-application:2.0


  

